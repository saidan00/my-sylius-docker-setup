# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en_US
    sylius.form.type.product_translation.validation_groups: [app_product]
    sylius.form.type.product.validation_groups: [app_product] # the product class also needs to be aware of the translation's validation

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: false

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Provider,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    app.provider.product:
        class: App\Provider\ProductProvider
        arguments: ['@sylius.repository.product']
        public: true

    app.form.extension.type.customer_profile:
        class: App\Form\Extension\CustomerProfileTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Sylius\Bundle\CustomerBundle\Form\Type\CustomerProfileType }

    app.factory.product:
        class: App\Factory\ProductFactory
        decorates: sylius.factory.product
        arguments: ['@app.factory.product.inner']
        public: false

    App\Controller\ProductController:
        autowire: false

    sylius.controller.shop.homepage:
        class: App\Controller\Shop\HomepageController
        autowire: true
        tags: ['controller.service_arguments']

    app.listener.admin.menu_builder:
        class: App\Menu\AdminMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.main, method: addAdminMenuItems }

    app.listener.shop.menu_builder:
        class: App\Menu\AccountMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.shop.account, method: addAccountMenuItems }

    app.listener.admin.customer.show.menu_builder:
        class: App\Menu\AdminCustomerShowMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.customer.show, method: addAdminCustomerShowMenuItems }

    app.listener.admin.order.show.menu_builder:
        class: App\Menu\AdminOrderShowMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.order.show, method: addAdminOrderShowMenuItems }

    app.listener.admin.product.form.menu_builder:
        class: App\Menu\AdminProductFormMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.product.form, method: addItems }

    app.listener.admin.product_variant.form.menu_builder:
        class: App\Menu\AdminProductVariantFormMenuListener
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.product_variant.form, method: addItems }
            
    App\Grid\AdminProductsGridListener:
        tags:
            - { name: kernel.event_listener, event: sylius.grid.admin_product, method: editFields }
